#!/bin/bash

# GNOME Wallpaper Selector Script
# Usage: ./set-wallpaper.sh [directory]
# If no directory is provided, defaults to ~/Pictures

# --- HELP FUNCTION ---
show_help() {
    cat << EOF
wpset - A simple, interactive wallpaper selector for GNOME desktops.

USAGE:
    wpset [OPTIONS] [DIRECTORY]

DESCRIPTION:
    This script allows you to interactively select a wallpaper from a
    given directory and set it as your GNOME desktop background.

    It uses 'gum' for folder navigation and 'fzf' for image selection.
    If using 'kitty' terminal, it will display image previews.

OPTIONS:
    -h, --help    Show this help message and exit.

ARGUMENTS:
    <DIRECTORY>   The directory to search for wallpapers in.
                  If not provided, defaults to '$HOME/Pictures'.
EOF
}

# --- ARGUMENT PARSING ---
if [[ "$1" == "--help" || "$1" == "-h" ]]; then
    show_help
    exit 0
fi

# --- DEPENDENCY CHECKS ---

# Check if gum is installed, and offer to install it if not.
if ! command -v gum &> /dev/null; then
    echo "gum is not installed."
    if command -v pacman &> /dev/null; then
        read -p "Do you want to install it now with 'sudo pacman -S gum'? [Y/n] " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ || $REPLY == "" ]]; then
            sudo pacman -S gum
            if ! command -v gum &> /dev/null; then
                echo "Error: gum installation failed. Please install it manually."
                exit 1
            fi
        else
            echo "gum is required for folder navigation. Please install it to use this script."
            exit 1
        fi
    else
        echo "Error: Cannot install gum automatically. Please install it from:"
        echo "https://github.com/charmbracelet/gum"
        exit 1
    fi
fi

# Check if fzf is installed
if ! command -v fzf &> /dev/null; then
    echo "Error: fzf is not installed. Please install it first."
    echo "On Arch Linux: sudo pacman -S fzf"
    exit 1
fi

# Check if kitty is installed (for image preview)
if ! command -v kitty &> /dev/null; then
    echo "Warning: kitty is not installed. Image preview will not work."
    echo "You can install it with: sudo pacman -S kitty"
    echo "Or remove the --preview option from the script."
fi


# --- DIRECTORY SELECTION ---

# Set the base search directory (default to ~/Pictures if no argument provided)
BASE_SEARCH_DIR="${1:-$HOME/Pictures}"

# Check if the base directory exists
if [ ! -d "$BASE_SEARCH_DIR" ]; then
    echo "Error: Directory '$BASE_SEARCH_DIR' does not exist."
    exit 1
fi

# Find all directories inside the base directory and let the user choose
# The 'find' command will also list the base directory itself.
DIRECTORIES=$(find "$BASE_SEARCH_DIR" -type d 2>/dev/null | sort)

if [ -z "$DIRECTORIES" ]; then
    echo "No sub-directories found in '$BASE_SEARCH_DIR'. Searching for images there."
    SEARCH_DIR="$BASE_SEARCH_DIR"
else
    # Use gum to let the user choose a directory
    CHOSEN_DIR=$(echo "$DIRECTORIES" | gum choose --header "Select a directory to search for wallpapers" --height 20)

    # If the user pressed Esc or didn't select anything, exit gracefully
    if [ -z "$CHOSEN_DIR" ]; then
        echo "No directory selected. Exiting."
        exit 0
    fi
    SEARCH_DIR="$CHOSEN_DIR"
fi


# --- WALLPAPER SELECTION AND SETTING ---

echo "Searching for images in '$SEARCH_DIR'..."

# Find images and let user select with fzf
SELECTED_IMAGE=$(find "$SEARCH_DIR" -maxdepth 1 -type f \( -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" -o -name "*.PNG" -o -name "*.JPG" -o -name "*.JPEG" \) 2>/dev/null | \
    fzf --preview='kitty icat --clear --transfer-mode=memory --stdin=no --place=${FZF_PREVIEW_COLUMNS}x${FZF_PREVIEW_LINES}@0x0 {}' \
        --preview-window=right:50% \
        --prompt="Select wallpaper: " \
        --height=80%)

# Clear any lingering kitty image previews after fzf exits.
if command -v kitty &> /dev/null; then
    kitty icat --clear
fi

# Check if user selected an image
if [ -z "$SELECTED_IMAGE" ]; then
    echo "No image selected. Exiting."
    exit 0
fi

# Convert to absolute path
SELECTED_IMAGE=$(realpath "$SELECTED_IMAGE")

# Set as wallpaper using gsettings
echo "Setting wallpaper to: $SELECTED_IMAGE"
gsettings set org.gnome.desktop.background picture-uri "file://$SELECTED_IMAGE"
gsettings set org.gnome.desktop.background picture-uri-dark "file://$SELECTED_IMAGE"

echo "Wallpaper set successfully!"

# Optional: Show current wallpaper info
echo "Current wallpaper: $(gsettings get org.gnome.desktop.background picture-uri)" 